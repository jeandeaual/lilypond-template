name: build
on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'LICENSE'
      - '.gitignore'
      - '**.md'
      - '.vscode/*'
  push:
    branches:
      - master
    paths-ignore:
      - 'LICENSE'
      - '.gitignore'
      - '**.md'
      - '.vscode/*'
  workflow_dispatch:
    inputs: {}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Make the output directories
        run: mkdir -p build/{a4,letter,svg,midi}
      - name: Make sure it builds with the version specified in the source file(s)
        uses: docker://jeandeaual/lilypond:2.20.0
        with:
          args: lilypond main.ly
      - name: Build A4 PDF
        uses: docker://jeandeaual/lilypond:latest
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/a4 main.ly
      - name: Build Letter PDF
        uses: docker://jeandeaual/lilypond:latest
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"letter\" -o build/letter main.ly
      - name: Build SVG
        uses: docker://jeandeaual/lilypond:latest
        with:
          args: lilypond --svg -dno-point-and-click -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/svg main.ly
      - name: Remove extra MIDI files
        run: |
          cp build/a4/*.midi build/midi/
          find . -depth -maxdepth 3 -regex '.*\/midi\/.*' -prune -o -type f -name '*.midi' -delete
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Upload A4 artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ github.event.repository.name }}-a4-${{ steps.slug.outputs.sha7 }}
          path: build/a4
      - name: Upload Letter artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ github.event.repository.name }}-letter-${{ steps.slug.outputs.sha7 }}
          path: build/letter
      - name: Upload SVG artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ github.event.repository.name }}-svg-${{ steps.slug.outputs.sha7 }}
          path: build/svg
      - name: Upload MIDI artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ github.event.repository.name }}-midi-${{ steps.slug.outputs.sha7 }}
          path: build/midi
  deploy:
    # Only deploy when pushing to master or manually running the workflow
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || github.event_name == 'workflow_dispatch'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Jekyll template
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          repository: jeandeaual/lilypond-jekyll-template
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Download the A4 build artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-a4-${{ steps.slug.outputs.sha7 }}
          path: a4
      - name: Download the Letter build artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-letter-${{ steps.slug.outputs.sha7 }}
          path: letter
      - name: Download the SVG build artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-svg-${{ steps.slug.outputs.sha7 }}
          path: svg
      - name: Download the MIDI build artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-midi-${{ steps.slug.outputs.sha7 }}
          path: midi
      - name: Update the Jekyll config
        uses: mikefarah/yq@v4.5.1
        with:
          cmd: yq e -i 'del(.description) | (.title = "'"${TITLE}"'") | (.baseurl = "'"${BASEURL}"'") | (.repository = "'"${REPOSITORY}"'") | (.copyright = '"${COPYRIGHT}"')' _config.yml
        env:
          TITLE: LilyPond Template
          BASEURL: /${{ github.event.repository.name }}
          REPOSITORY: ${{ github.repository }}
          COPYRIGHT: false
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true
        env:
          BUNDLE_WITHOUT: development
      - name: Build the Jekyll site
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: _site
          PRESERVE: true
